CMAKE_MINIMUM_REQUIRED(VERSION 2.8)
SET(CMAKE_C_COMPILER /usr/bin/gcc-5)
SET(CMAKE_CXX_COMPILER /usr/bin/g++-5)
PROJECT(headless)
ADD_DEFINITIONS(-DTOOL)
ADD_DEFINITIONS(-DUSE_OPENCV2)
SET(TOOL_BUILD TRUE)

# Include dependent libraries
INCLUDE($ENV{NAO_HOME}/build/common.cmake)
SET(CMAKE_MODULE_PATH "${NAO_HOME}/build/cmake")
ADD_SUBDIRECTORY(core)
ADD_SUBDIRECTORY(rswalk2014)
ADD_SUBDIRECTORY(pythonswig)

LIST(APPEND CMAKE_PREFIX_PATH /usr/lib/x86_64-linux-gnu)

# Find package dependencies
FIND_PACKAGE(Boost REQUIRED thread system)
FIND_PACKAGE(FFTW REQUIRED)
FIND_PACKAGE(PNG REQUIRED)
FIND_PACKAGE(OpenGL REQUIRED)
FIND_PACKAGE(GLUT REQUIRED)
FIND_PACKAGE(OpenCV REQUIRED)

# Create final executable
ADD_EXECUTABLE(headless ${CMAKE_CURRENT_LIST_DIR}/main.cpp)

# Specialized find/link function because it's 2015 and cmake still can't handle multiarch
SET(CMAKE_PREFIX_PATH "/usr")
FUNCTION(FIND_AND_LINK target fullName)
  STRING(REGEX REPLACE "^([A-Za-z0-9\\-]+).so.*" "\\1" baseName ${fullName})
  FIND_LIBRARY(${baseName} NAMES ${fullName} PATHS "/usr/lib/x86_64-linux-gnu" "/usr/lib" "/lib/x86_64-linux-gnu")
  TARGET_LINK_LIBRARIES(${target} ${${baseName}})
  #MESSAGE(STATUS "Found ${baseName} at ${${baseName}}, linking to ${target}")
  IF(NOT(${baseName}))
    MESSAGE(FATAL_ERROR "ERROR: Could not find library ${fullName}")
  ENDIF(NOT(${baseName}))
ENDFUNCTION(FIND_AND_LINK)

# A bunch of shared objects that need to be linked individually because cmake is bad
FIND_AND_LINK(headless libdl.so.2)
FIND_AND_LINK(headless libpthread.so.0)
FIND_AND_LINK(headless libjpeg.so.8)
FIND_AND_LINK(headless libtiff.so.5)
FIND_AND_LINK(headless libjasper.so.1)
FIND_AND_LINK(headless libIlmImf-2_2.so.22)
FIND_AND_LINK(headless libHalf.so.12)
FIND_AND_LINK(headless libgtk-x11-2.0.so.0)
FIND_AND_LINK(headless libgdk-x11-2.0.so.0)
FIND_AND_LINK(headless libgtkglext-x11-1.0.so.0)
FIND_AND_LINK(headless libgdkglext-x11-1.0.so.0)
FIND_AND_LINK(headless libdc1394.so.22)
FIND_AND_LINK(headless libv4l1.so.0)
#FIND_AND_LINK(headless libavcodec.so.54)
#FIND_AND_LINK(headless libavformat.so.54)
#FIND_AND_LINK(headless libavutil.so.52)
#FIND_AND_LINK(headless libswscale.so.2)
FIND_AND_LINK(headless libtbb.so.2)
FIND_AND_LINK(headless libqwt.so)
FIND_AND_LINK(headless libX11.so.6)
FIND_AND_LINK(headless libglapi.so.0)
FIND_AND_LINK(headless libXext.so.6)
FIND_AND_LINK(headless libXdamage.so.1)
FIND_AND_LINK(headless libXfixes.so.3)
FIND_AND_LINK(headless libX11-xcb.so.1)
FIND_AND_LINK(headless libxcb-glx.so.0)
FIND_AND_LINK(headless libxcb.so.1)
FIND_AND_LINK(headless libXxf86vm.so.1)
FIND_AND_LINK(headless libdrm.so.2)
FIND_AND_LINK(headless libfreetype.so.6)
FIND_AND_LINK(headless libXrender.so.1)
FIND_AND_LINK(headless libfontconfig.so.1)
FIND_AND_LINK(headless libaudio.so.2)
FIND_AND_LINK(headless libz.so.1)
FIND_AND_LINK(headless libgobject-2.0.so.0)
FIND_AND_LINK(headless libSM.so.6)
FIND_AND_LINK(headless libICE.so.6)
FIND_AND_LINK(headless libXi.so.6)
FIND_AND_LINK(headless libglib-2.0.so.0)
FIND_AND_LINK(headless libpng12.so.0)
FIND_AND_LINK(headless libXau.so.6)
FIND_AND_LINK(headless libXdmcp.so.6)
FIND_AND_LINK(headless libexpat.so.1)
FIND_AND_LINK(headless libXt.so.6)
FIND_AND_LINK(headless libpcre.so.3)
FIND_AND_LINK(headless libffi.so.6)
FIND_AND_LINK(headless libuuid.so.1)
FIND_AND_LINK(headless libpng15.so.15)
FIND_AND_LINK(headless libopencv_highgui.so)
FIND_AND_LINK(headless libopencv_calib3d.so)
FIND_AND_LINK(headless libopencv_core.so)
FIND_AND_LINK(headless libopencv_features2d.so)
FIND_AND_LINK(headless libopencv_flann.so)
FIND_AND_LINK(headless libopencv_imgproc.so)
FIND_AND_LINK(headless libopencv_nonfree.so)
FIND_AND_LINK(headless libboost_thread.so)
FIND_AND_LINK(headless libboost_system.so)
FIND_AND_LINK(headless libc.so.6)
FIND_AND_LINK(headless libxcb-dri2.so.0)
FIND_AND_LINK(headless libxcb-dri3.so.0)
FIND_AND_LINK(headless libxcb-present.so.0)
FIND_AND_LINK(headless libxcb-sync.so.1)
FIND_AND_LINK(headless libxshmfence.so.1)
FIND_AND_LINK(headless libQGLViewer-qt4.so)
FIND_AND_LINK(headless librt.so.1)

TARGET_LINK_LIBRARIES(headless ${Boost_LIBRARIES} ${FFTW_LIBRARIES} ${PNG_LIBRARIES} ${OPENCV2_LIBS} core ${LIBFLATBUFFERS}x64 ${LIBYAML-CPP}x64 ${ALGLIB}x64 rswalk2014 _pythonswig_module)

